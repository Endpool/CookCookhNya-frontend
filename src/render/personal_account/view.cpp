#include "view.hpp"

#include "message_tracker.hpp"
#include "render/common.hpp"
#include "utils.hpp"

#include <cstddef>
#include <string>
#include <utility>

namespace cookcookhnya::render::personal_account {

using namespace tg_types;

void renderPersonalAccountMenu(UserId userId, ChatId chatId, BotRef bot) {

    const std::size_t buttonRows = 3;
    InlineKeyboard keyboard(buttonRows);

    keyboard[0].push_back(detail::makeCallbackButton(u8"üåΩ –ú–æ–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "my_ingredients"));
    keyboard[1].push_back(detail::makeCallbackButton(u8"üìí –ú–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã", "my_recipes"));
    keyboard[2].push_back(detail::makeCallbackButton(u8"‚Ü©Ô∏è –ù–∞–∑–∞–¥", "back"));

    auto text = utils::utf8str(u8"üë§ –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –õ–∏—á–Ω–æ–º –ö–∞–±–∏–Ω–µ—Ç–µ. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ª–∏—á–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ "
                               u8"—Ä–µ—Ü–µ–ø—Ç—ã, –∞ —Ç–∞–∫–∂–µ –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.");

    auto messageId = message::getMessageId(userId);
    if (messageId) {
        bot.editMessageText(text, chatId, *messageId, "", "", nullptr, detail::makeKeyboardMarkup(std::move(keyboard)));
    }
}

} // namespace cookcookhnya::render::personal_account

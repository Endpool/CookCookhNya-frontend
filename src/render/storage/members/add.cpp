#include "add.hpp"

#include "backend/id_types.hpp"
#include "message_tracker.hpp"
#include "render/common.hpp"
#include "utils.hpp"

#include <tgbot/types/InlineKeyboardButton.h>

#include <memory>
#include <string>
#include <utility>

namespace cookcookhnya::render::storage::members {

void renderStorageMemberAdditionPrompt(
    const api::StorageId& storageId, UserId userId, ChatId chatId, BotRef bot, StorageApiRef storageApi) {
    auto storage = storageApi.get(userId, storageId);

    const int buttonRows = 2;
    InlineKeyboard keyboard(buttonRows);

    keyboard[0].push_back(makeCallbackButton(u8"üîó –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É", "create_link"));
    keyboard[1].push_back(makeCallbackButton(u8"‚Ü©Ô∏è –ù–∞–∑–∞–¥", "back"));
    auto text =
        utils::utf8str(u8"üì© –°–æ–∑–¥–∞–π—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\n");
    auto messageId = message::getMessageId(userId);
    if (messageId) {
        bot.editMessageText(text, chatId, *messageId, "", "", nullptr, makeKeyboardMarkup(std::move(keyboard)));
    }
};

void addShareLinkButton(
    const api::StorageId& storageId, UserId userId, ChatId chatId, BotRef bot, StorageApiRef storageApi) {
    auto storage = storageApi.get(userId, storageId);

    const int buttonRows = 2;
    InlineKeyboard keyboard(buttonRows);

    auto inviteButton = std::make_shared<TgBot::InlineKeyboardButton>();
    inviteButton->text = utils::utf8str(u8"üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è");
    auto hash = storageApi.inviteMember(userId, storageId);
    const auto telegramBotAlias = bot.getUnderlying().getMe()->username;
    auto inviteText = "–ù–∞–∂–º–∏ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ üç±**" + storage.name +
                      "** –≤ CookCookhNya!\nhttps://t.me/" + telegramBotAlias + "?start=" + hash;
    inviteButton->url = "https://t.me/share/url?url=" + inviteText;
    inviteButton->callbackData = "user_sended_link";

    keyboard[0].push_back(std::move(inviteButton));
    keyboard[1].push_back(makeCallbackButton(u8"‚Ü©Ô∏è –ù–∞–∑–∞–¥", "back"));
    auto text = utils::utf8str(
        u8"üì© –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\n");
    auto messageId = message::getMessageId(userId);
    if (messageId)
        bot.editMessageText(text, chatId, *messageId, makeKeyboardMarkup(std::move(keyboard)));
};

} // namespace cookcookhnya::render::storage::members

name: ci pipeline for frontend

on:
  push:
    branches:
      - main
      - dev

jobs:
  lint-frontend:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            submodules: true
            
        - name: Update submodules explicitly
          run: git submodule update --init --recursive
        
        - name: Cache Conan dependencies
          uses: actions/cache@v3
          id: conan-cache
          with:
            path: |
              ~/.conan2
              /tmp/deps
            key: ${{ runner.os }}-conan-${{ hashFiles('Frontend/conanfile.txt') }}
            restore-keys: |
              ${{ runner.os }}-conan-
        
        - name: Install system dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y \
              clang-tidy-15 \
              clang-format-15 \
              parallel \
              python3-pip \
              cmake \
              build-essential \
              wget \
              tar
            sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-15 100
            sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-15 100
            
        - name: Install Conan via pip
          if: steps.conan-cache.outputs.cache-hit != 'true'
          run: |
            python3 -m pip install --user conan==2.15.1
            echo "$HOME/.local/bin" >> $GITHUB_PATH
        
        - name: Set up Conan profile
          working-directory: Frontend
          run: |
            mkdir -p $HOME/.conan2/profiles
            conan profile detect --name=default --force
            sed -i 's/compiler.cppstd=.*/compiler.cppstd=20/' $HOME/.conan2/profiles/default
            cat $HOME/.conan2/profiles/default
        
        - name: Install tgbotstater dependency
          if: steps.conan-cache.outputs.cache-hit != 'true'
          working-directory: Frontend
          run: |
            mkdir -p /tmp/deps
            cd /tmp/deps
            wget https://github.com/Makcal/TgBotStater/archive/refs/tags/v0.3.4.tar.gz
            tar -xvf v0.3.4.tar.gz
            cd TgBotStater-0.3.4
            conan create . --build=missing -s compiler.cppstd=20
        
        - name: Install project dependencies
          if: steps.conan-cache.outputs.cache-hit != 'true'
          working-directory: Frontend
          run: |
            conan install . --build=missing -s compiler.cppstd=20
        
        - name: Configure CMake
          working-directory: Frontend
          run: |
            mkdir -p build/Release
            cmake --preset=conan-release -DCMAKE_CXX_STANDARD=20
        
        - name: Build project
          working-directory: Frontend
          run: |
            cmake --build --preset=conan-release
        
        - name: Verify compilation database
          working-directory: Frontend
          run: |
            if [ ! -f build/Release/compile_commands.json ]; then
              echo "Generating compilation database..."
              cmake --build --preset=conan-release --target clang-tidy
            fi
            ls -la build/Release/compile_commands.json
        
        - name: Run clang-format checks
          working-directory: Frontend
          run: |
            find src include -type f \( -name '*.hpp' -or -name '*.cpp' \) \
              -exec clang-format-15 --dry-run --Werror {} \+
        
        - name: Run clang-tidy
          working-directory: Frontend
          run: |
            cd build/Release
            run-clang-tidy-15 -j$(nproc) -quiet

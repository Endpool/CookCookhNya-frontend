name: ci pipeline for frontend

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.conan-cache.outputs.cache-hit }}
    steps:
      # [Previous steps remain exactly the same until the upload step...]
      
      - name: Upload compilation database
        uses: actions/upload-artifact@v4
        with:
          name: compilation-db
          path: build/Release/compile_commands.json

  clang-format-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup clang-format
        uses: aminya/setup-cpp@v1
        with:
          clangformat: true
          compiler: none
          clangtidy: false
          cmake: false
      
      - name: Run clang-format checks
        run: |
          find src include -type f \( -name '*.hpp' -or -name '*.cpp' \) \
            -exec clang-format --dry-run --Werror {} \;

  clang-tidy-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup clang-tidy
        uses: aminya/setup-cpp@v1
        with:
          clangtidy: true
          compiler: none
          clangformat: false
          cmake: false
      
      - name: Download compilation database
        uses: actions/download-artifact@v4
        with:
          name: compilation-db
          path: build/Release/
      
      - name: Run clang-tidy
        run: |
          cd build/Release
          run-clang-tidy -j$(nproc) -quiet
